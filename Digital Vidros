import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Classe que representa um Pedido
class Pedido {
    private int id;
    private String descricao;
    private String status;

    public Pedido(int id, String descricao) {
        this.id = id;
        this.descricao = descricao;
        this.status = "Novo";
    }

    public int getId() {
        return id;
    }

    public String getDescricao() {
        return descricao;
    }

    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @Override
    public String toString() {
        return "Pedido ID: " + id + ", Descrição: " + descricao + ", Status: " + status;
    }
}

// Classe principal para gerenciamento de pedidos
public class GerenciadorPedidos {

    private static List<Pedido> pedidos = new ArrayList<>();
    private static int proximoId = 1;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("Menu:");
            System.out.println("1. Adicionar Pedido");
            System.out.println("2. Atualizar Status do Pedido");
            System.out.println("3. Listar Pedidos");
            System.out.println("4. Sair");
            System.out.print("Escolha uma opção: ");
            
            int opcao = scanner.nextInt();
            scanner.nextLine(); // Consumir a nova linha
            
            switch (opcao) {
                case 1:
                    adicionarPedido(scanner);
                    break;
                case 2:
                    atualizarStatus(scanner);
                    break;
                case 3:
                    listarPedidos();
                    break;
                case 4:
                    System.out.println("Saindo...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Opção inválida. Tente novamente.");
            }
        }
    }

    private static void adicionarPedido(Scanner scanner) {
        System.out.print("Digite a descrição do pedido: ");
        String descricao = scanner.nextLine();
        Pedido pedido = new Pedido(proximoId++, descricao);
        pedidos.add(pedido);
        System.out.println("Pedido adicionado com sucesso!");
    }

    private static void atualizarStatus(Scanner scanner) {
        System.out.print("Digite o ID do pedido para atualizar: ");
        int id = scanner.nextInt();
        scanner.nextLine(); // Consumir a nova linha

        Pedido pedido = encontrarPedidoPorId(id);
        if (pedido != null) {
            System.out.print("Digite o novo status do pedido: ");
            String novoStatus = scanner.nextLine();
            pedido.setStatus(novoStatus);
            System.out.println("Status atualizado com sucesso!");
        } else {
            System.out.println("Pedido não encontrado.");
        }
    }

    private static Pedido encontrarPedidoPorId(int id) {
        for (Pedido pedido : pedidos) {
            if (pedido.getId() == id) {
                return pedido;
            }
        }
        return null;
    }

    private static void listarPedidos() {
        if (pedidos.isEmpty()) {
            System.out.println("Nenhum pedido encontrado.");
        } else {
            for (Pedido pedido : pedidos) {
                System.out.println(pedido);
            }
        }
    }
}
